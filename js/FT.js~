function FT(V,IU,R,habit) {
    out = [];
    var F = 0;
    var l = IU.l;
    var w = IU.w;
    for (var j=0; j<4; j++) {
	switch (habit){
	case "sphere":
	    F = FT_sphere(V[0],R[j]); break;
	case "tetragonal":
	    F = FT_tetragonal(V[0],R[j],l,w); break;
	case "infinite prism":
	    F = FT_infinite_prism(V[0],R[j],l,w); break;
	case "infinite cylinder":
	    F = FT_infinite_cylinder(V[0],R[j],l,w); break;
	case "hexagonal (0T)":
	    break;
	case "hexagonal (1T)":
	    break;
	case "hexagonal (2T)":
	    break;
	}
	out.push(F);
    }
    return out;
}

function FT_sphere(V,R){
    var r = Math.pow(0.75*V/Math.PI,1/3);
    var out = 1 - 0.75*R/r + 1.31*Math.pow(R/r,3)/16;
    return out;
}

function FT_tetragonal(V,R,l,w){
    var h = V / (l * w);
    var out = 1 - (1/l+1/w+1/h)*R/2  + 
        0.2122*(l+w+h)*1.09*Math.pow(R,2)/(l*w*h) - 
	0.00995*1.31*Math.pow(R,3)/(l*w*h);
    return out;
}

function FT_infinite_prism(V,R,l,w){
    var h = V / (l * w);
    var out = 1 - (1/w+1/h)*R/2  + 0.2122*1.09*Math.pow(R,2)/(w*h);
    return out;
}

function FT_infinite_cylinder(V,R,l,w){
    var r = Math.sqrt(V/(Math.PI*l));
    var out = 1 - 0.5*R/r + 0.0153*1.31*Math.pow(R/r,3);
    return out;
}

function FT_err(V,IU,R,habit) {
    var out = [], J, EB;
    for (var j=0; j<4; j++) {
	J = JC(V[0],IU,R[j],habit);
	EB = IU.SigmaB();
	out.push(propagate(J,EB));
    }
    return out;
}

function JC(V,IU,R,habit){
    var out = [0,0,0];
    var J = IU.Jsesm();
    for (var i=0; i<J.length; i++){
	out[i] = dFt_dsesm(V,IU,R,habit) * J[i];
    }
    return out;
}

function dFt_dyxmsmsp(V,IU,R){
    var out = [0,0,0,0];
    for (var i=0; i<out.length; i++){
	out[i] = dFt_dsesm(V[0],IU,R[i])*IU.dsesm_dyxmsmsp();
    }
    return out;
}

function dFt_dsxmsmsp(V,IU,R){
    var out = [0,0,0,0];
    for (var i=0; i<out.length; i++){
	out[i] = dFt_dsesm(V[0],IU,R[i])*IU.dsesm_dsxmsmsp();
    }
    return out;
}

function dFt_dxsmss(V,IU,R){
    var out = [0,0,0,0];
    for (var i=0; i<out.length; i++){
	out[i] = dFt_dsesm(V[0],IU,R[i])*IU.dsesm_dxsmss();
    }
    return out;
}

function dFt_dsesm(V,IU,R,habit){
    var out = [];
    var dFtdsesm = 0;
    if (IU.l>0 & IU.w >0){
	switch (habit){
	case "sphere":
	    dFtdsesm = dFt_dsesm_sphere(V,IU,R);
	    break;
	case "tetragonal":
	    dFtdsesm = dFt_dsesm_tetragonal(V,IU,R);
	    break;
	case "infinite prism":
	    dFtdsesm = dFt_dsesm_infinite_prism(V,IU,R);
	    break;
	case "infinite cylinder":
	    dFtdsesm = dFt_dsesm_infinite_cylinder(V,IU,R);
	    break;
	case "hexagonal (0T)":
	    break;
	case "hexagonal (1T)":
	    break;
	case "hexagonal (2T)":
	    break;
	}
	out.push(dFtdsesm);
    }
    return out;
}

function dFt_dsesm_sphere(V,IU,R){
    var l = IU.l;
    var w = IU.w;
    var h = V/(l*w);
    var r = Math.pow((3*V)/(4*Math.PI),1/3);
    var dFtdr = (3*R)/(4*r*r) - 1.31*(3*R*R*R)/(16*r*r*r*r);
    var drdV = Math.pow(V,-2/3)/(4*Math.PI);
    return dFtdr*drdV*IU.dVdsesm;
}

function dFt_dsesm_tetragonal(V,IU,R){
    var l = IU.l;
    var w = IU.w;
    var h = V/(l*w);
    var dFtdh = R/(2*h*h) - 0.2122*1.09*R*R*(l+w)/(V+h) + 0.00995*1.31*R*R*R/(V*h);
    var dhdV = 1/(l*w);
    return dFtdh*dhdV*IU.dVdsesm;
}

function dFt_dsesm_infinite_prism(V,IU,R){
    var l = IU.l;
    var w = IU.w;
    var h = V/(l*w);
    var dFtdh = R/(2*h*h) - 0.2122*1.09*R*R/(w*h*h);
    var dhdV = 1/(l*w);
    return dFtdh*dhdV*IU.dVdsesm;
}

function dFt_dsesm_infinite_cylinder(V,IU,R){
    var l = IU.l;
    var w = IU.w;
    var r = Math.sqrt(V/(Math.PI*l));
    var dFtdr = R/(2*r*r) - 3*0.0153*1.31*R*R*R/Math.pow(r,4);
    var drdV = 1/(2*Math.sqrt(l*V*Math.PI));
    return dFtdr*drdV*IU.dVdsesm;
}
